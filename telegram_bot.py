import logging
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from urfu_parser_v2 import UrfuParser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7817389200:AAHUWxCcW2aWIHYxaGLy1mKdi6tiq9NxRPU"

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–∞—Ä—Å–µ—Ä–∞
parser = UrfuParser()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_message = """
üéì **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –£—Ä–§–£!**

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö –ø–æ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞.

üìù **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
‚Ä¢ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ (7-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ)
‚Ä¢ –Ø –Ω–∞–π–¥—É –∏ –ø–æ–∫–∞–∂—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö

üîç **–ü—Ä–∏–º–µ—Ä:** 4475115

‚ùì **–ö–æ–º–∞–Ω–¥—ã:**
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ø–æ–º–æ—â—å

–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫! üöÄ
    """
    await update.message.reply_text(welcome_message, parse_mode='Markdown')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_message = """
üÜò **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç:**
–ë–æ—Ç –ø–∞—Ä—Å–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –£—Ä–§–£ –ø–æ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞.

üîç **–ö–∞–∫ –Ω–∞–π—Ç–∏ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞:**
1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –£—Ä–§–£ –≤ —Ä–∞–∑–¥–µ–ª "–°–ø–∏—Å–∫–∏ –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö"
2. ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ - —ç—Ç–æ 7-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ
3. –ü—Ä–∏–º–µ—Ä: 4475115

üìù **–ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–æ—Ç:**
‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
‚Ä¢ –ò–Ω—Å—Ç–∏—Ç—É—Ç
‚Ä¢ –§–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è
‚Ä¢ –¢–∏–ø –∫–æ–Ω–∫—É—Ä—Å–∞
‚Ä¢ –°—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö

‚ö†Ô∏è **–í–∞–∂–Ω–æ:**
‚Ä¢ ID –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä
‚Ä¢ –î–ª–∏–Ω–∞ ID –æ–±—ã—á–Ω–æ 7 —Ü–∏—Ñ—Ä
‚Ä¢ –ï—Å–ª–∏ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID

üîÑ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:**
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ —á–∏—Å–ª–æ–º.
    """
    await update.message.reply_text(help_message, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_message = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    if not user_message.isdigit():
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ).\n"
            "–ü—Ä–∏–º–µ—Ä: 4475115"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É ID
    if len(user_message) < 6 or len(user_message) > 8:
        await update.message.reply_text(
            "‚ùå ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 6-8 —Ü–∏—Ñ—Ä.\n"
            "–ü—Ä–∏–º–µ—Ä: 4475115"
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
    search_message = await update.message.reply_text(
        f"üîç –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è ID: {user_message}...\n"
        "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
    )
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        result = parser.search_by_id(user_message)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.get('success'):
            formatted_result = parser.format_result_for_telegram(result)
            
            # Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è (4096 —Å–∏–º–≤–æ–ª–æ–≤)
            if len(formatted_result) > 4000:
                # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
                parts = []
                current_part = ""
                lines = formatted_result.split('\n')
                
                for line in lines:
                    if len(current_part + line + '\n') > 4000:
                        if current_part:
                            parts.append(current_part)
                        current_part = line + '\n'
                    else:
                        current_part += line + '\n'
                
                if current_part:
                    parts.append(current_part)
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ
                await search_message.delete()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏
                for i, part in enumerate(parts, 1):
                    if i == 1:
                        await update.message.reply_text(part, parse_mode='Markdown')
                    else:
                        await update.message.reply_text(f"**–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ ({i}):**\n\n{part}", parse_mode='Markdown')
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
                await search_message.edit_text(formatted_result, parse_mode='Markdown')
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
            await search_message.edit_text(
                f"‚ùå {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}\n\n"
                "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        await search_message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.\n"
            "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ID."
        )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –£—Ä–§–£...")
    print(f"üîë –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    print("‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ Telegram –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")
    print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()

